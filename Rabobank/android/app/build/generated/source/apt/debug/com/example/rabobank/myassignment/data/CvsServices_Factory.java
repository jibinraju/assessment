// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.rabobank.myassignment.data;

import com.example.rabobank.myassignment.ui.MainObservable;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class CvsServices_Factory implements Factory<CvsServices> {
  private final Provider<MainObservable> mainObservableProvider;

  public CvsServices_Factory(Provider<MainObservable> mainObservableProvider) {
    this.mainObservableProvider = mainObservableProvider;
  }

  @Override
  public CvsServices get() {
    CvsServices instance = new CvsServices();
    CvsServices_MembersInjector.injectMainObservable(instance, mainObservableProvider.get());
    return instance;
  }

  public static Factory<CvsServices> create(Provider<MainObservable> mainObservableProvider) {
    return new CvsServices_Factory(mainObservableProvider);
  }

  public static CvsServices newCvsServices() {
    return new CvsServices();
  }
}
